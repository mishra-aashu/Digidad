class d{constructor(){this.supabase=null,this.isInitialized=!1,this.currentUser=null,this.realtimeChannels=new Map,this.initializationError=null,this.isInitializing=!1,d.instance||this.initializeClient()}static getInstance(){return d.instance||(d.instance=new d),d.instance}async initializeClient(){if(this.isInitializing){console.log("⏳ Supabase client initialization already in progress...");let e=0;for(;this.isInitializing&&e<20;)await new Promise(s=>setTimeout(s,100)),e++;if(this.initializationError)throw this.initializationError;if(this.isInitialized)return;throw new Error("Initialization timeout")}if(this.isInitialized){console.log("✅ Supabase client already initialized");return}this.isInitializing=!0,this.initializationError=null;try{if(typeof window.supabase>"u"){if(console.log("📥 Loading Supabase library..."),typeof window.SUPABASE_CONFIG>"u"){console.log("📥 Loading supabase-config.js...");try{await this.loadScript("/supabase-config.js"),console.log("✅ supabase-config.js loaded")}catch(t){throw console.error("❌ Failed to load supabase-config.js:",t),new Error("Configuration file not loaded")}}await this.loadSupabaseScript();let r=0;const i=30;for(;typeof window.supabase>"u"&&r<i;)await new Promise(t=>setTimeout(t,100)),r++}if(typeof window.supabase>"u")throw console.error("❌ Supabase library not loaded. Please check your internet connection."),console.error("❌ Available window properties:",Object.keys(window).filter(r=>r.includes("supabase"))),new Error("Supabase library not loaded");if(console.log("✅ Supabase library loaded successfully"),console.log("🔍 Validating Supabase configuration..."),console.log("🔍 SUPABASE_CONFIG:",SUPABASE_CONFIG),!SUPABASE_CONFIG.SUPABASE_URL||!SUPABASE_CONFIG.SUPABASE_ANON_KEY)throw console.error("❌ Supabase configuration is missing. Please check SUPABASE_CONFIG."),console.log("SUPABASE_URL:",SUPABASE_CONFIG.SUPABASE_URL?"✅ Set":"❌ Missing"),console.log("SUPABASE_ANON_KEY:",SUPABASE_CONFIG.SUPABASE_ANON_KEY?"✅ Set":"❌ Missing"),new Error("Invalid Supabase configuration");console.log("✅ Supabase configuration validated"),this.supabase=window.supabase.createClient(SUPABASE_CONFIG.SUPABASE_URL,SUPABASE_CONFIG.SUPABASE_ANON_KEY,{auth:{autoRefreshToken:!1,persistSession:!1,detectSessionInUrl:!1},global:{headers:{apikey:SUPABASE_CONFIG.SUPABASE_ANON_KEY}},realtime:{params:{eventsPerSecond:10}}}),console.log("🔍 Testing database connection...");try{console.log("🔍 Testing direct fetch connectivity...");const r=await fetch(`${SUPABASE_CONFIG.SUPABASE_URL}/rest/v1/`,{method:"GET",headers:{apikey:SUPABASE_CONFIG.SUPABASE_ANON_KEY}});console.log("🔍 Direct fetch test status:",r.status)}catch(r){console.warn("⚠️ Direct fetch test failed:",r.message)}const{data:e,error:s}=await this.supabase.from("users").select("count").limit(1);if(s)if(s.code==="PGRST116")console.log("✅ Database connection successful (empty tables)");else throw console.warn("⚠️ Database connection test failed:",s.message),console.log("Error details:",s),console.log("Error code:",s.code),console.log("Error status:",s.status),new Error(`Database connection failed: ${s.message}`);else console.log("✅ Database connection successful");this.isInitialized=!0,console.log("✅ Supabase client initialized successfully")}catch(e){throw console.error("❌ Failed to initialize Supabase client:",e),this.isInitialized=!1,this.initializationError=e,e}finally{this.isInitializing=!1}}async loadScript(e){return new Promise((s,r)=>{const i=document.createElement("script");i.src=e,i.onload=s,i.onerror=r,document.head.appendChild(i)})}async loadSupabaseScript(){return new Promise((e,s)=>{if(typeof window.supabase<"u"){console.log("✅ Supabase already loaded"),e();return}if(document.querySelector('script[src*="supabase-js"]')){console.log("📋 Supabase script already in DOM, waiting for load...");let a=0;const c=setInterval(()=>{typeof window.supabase<"u"?(clearInterval(c),console.log("✅ Supabase script loaded from existing script"),e()):a>=50&&(clearInterval(c),s(new Error("Script in DOM but supabase not available after timeout"))),a++},100);return}const i=["https://cdn.jsdelivr.net/npm/@supabase/supabase-js@2.45.0/dist/umd/supabase.min.js"];let t=!1,o=0;i.forEach((a,c)=>{if(t)return;console.log(`📥 Attempting to load Supabase from: ${a}`);const n=document.createElement("script");n.src=a,n.crossOrigin="anonymous",n.onload=()=>{t||(t=!0,console.log("✅ Supabase script loaded successfully from:",a),e())},n.onerror=h=>{if(o++,console.warn(`⚠️ Failed to load Supabase from: ${a}`,h),o===i.length){const u=`
🚫 SUPABASE CDN LOADING FAILED

This is likely due to one of these issues:
1. 🔒 CORS Policy - Your browser is blocking CDN resources
2. 🌐 Network/Firewall - CDN domains are blocked
3. 📶 Internet Connection - Cannot reach CDN servers

💡 SOLUTIONS:
• Use HTTPS instead of HTTP for your local server
• Check if your firewall/antivirus allows CDN access
• Try using a different browser
• Or run: python -m http.server 8080 (instead of Live Server)

For development, you can also temporarily disable CORS in your browser.
                        `.trim();console.error(u),s(new Error("CDN loading failed. See console for solutions."))}},document.head.appendChild(n)})})}async ensureInitialized(){if(this.initializationError&&!this.isInitialized)throw this.initializationError;if(this.isInitialized||await this.initializeClient(),!this.isInitialized)throw new Error("Supabase client failed to initialize")}async signUp(e,s=null,r=null){await this.ensureInitialized();try{console.log("📝 Creating new user in Supabase:",{phone:e,name:s,email:r}),console.log("🔧 Using anon key for registration");const{data:i,error:t}=await this.supabase.from("users").insert({phone:e,name:s,email:r,is_online:!0,last_seen:new Date().toISOString()}).select().single();if(t){if(console.log("❌ User creation failed:",t),t.code==="42501"||t.message.includes("row-level security")){console.log("🔒 RLS Policy violation - trying alternative approach...");const{data:a,error:c}=await this.supabase.from("users").select("*").eq("phone",e).single();return a&&!c?(console.log("✅ Found existing user:",a.id),this.currentUser=a,{status:"success",user:a}):(console.error("❌ RLS Policy blocking user creation. Please check database policies."),{status:"error",message:"Registration blocked by security policy. Please contact support or check database configuration."})}if(t.code==="23505"){console.log("✅ User already exists, fetching existing user...");const{data:a,error:c}=await this.supabase.from("users").select("*").eq("phone",e).single();if(a&&!c)return console.log("✅ Found existing user:",a.id),this.currentUser=a,{status:"success",user:a};console.error("❌ Error finding existing user:",c)}throw t}const{error:o}=await this.supabase.from("profiles").insert({id:i.id,user_id:i.id,display_name:s||e,status:"Hey there! I am using Digidad."});return o&&console.warn("Profile creation warning:",o),this.currentUser=i,{status:"success",user:i}}catch(i){return console.error("Sign up error:",i),{status:"error",message:i.message}}}async signIn(e){await this.ensureInitialized();try{console.log("🔐 Looking up user by phone:",e);const{data:s,error:r}=await this.supabase.from("users").select("*").eq("phone",e).single();return r&&r.code==="PGRST116"?(console.log("❌ User not found, creating new user..."),await this.signUp(e)):r?(console.error("❌ User lookup error:",r),console.log("❌ Attempting to create user as fallback..."),await this.signUp(e)):(await this.supabase.from("users").update({is_online:!0,last_seen:new Date().toISOString()}).eq("id",s.id),this.currentUser=s,{status:"success",user:s})}catch(s){return console.error("Sign in error:",s),await this.signUp(e)}}async signOut(){await this.ensureInitialized();try{return this.currentUser&&(await this.supabase.from("users").update({is_online:!1,last_seen:new Date().toISOString()}).eq("id",this.currentUser.id),this.closeAllRealtimeChannels()),this.currentUser=null,{status:"success"}}catch(e){return console.error("Sign out error:",e),{status:"error",message:e.message}}}async updateUserProfile(e){if(await this.ensureInitialized(),!this.currentUser)return{status:"error",message:"No authenticated user"};try{const{data:s,error:r}=await this.supabase.from("users").update({...e,updated_at:new Date().toISOString()}).eq("id",this.currentUser.id).select().single();if(r)throw r;return this.currentUser=s,{status:"success",user:s}}catch(s){return console.error("Update profile error:",s),{status:"error",message:s.message}}}async updateProfile(e){if(await this.ensureInitialized(),!this.currentUser)return{status:"error",message:"No authenticated user"};try{const{data:s,error:r}=await this.supabase.from("profiles").upsert({user_id:this.currentUser.id,...e,updated_at:new Date().toISOString()}).select().single();if(r)throw r;return{status:"success",profile:s}}catch(s){return console.error("Update profile error:",s),{status:"error",message:s.message}}}async getUserProfile(e){await this.ensureInitialized();try{const{data:s,error:r}=await this.supabase.from("profiles").select("*").eq("user_id",e).single();if(r&&r.code!=="PGRST116")throw r;return{status:"success",profile:s}}catch(s){return console.error("Get profile error:",s),{status:"error",message:s.message}}}async findUserByPhone(e){var s,r;await this.ensureInitialized();try{console.log("🔍 Searching for user by phone:",e);const i=e.replace(/\D/g,"");console.log("📱 Digits only:",i);const t=i.slice(-10);if(console.log("📱 Last 10 digits:",t),t.length<10)return console.log("❌ Need at least 10 digits, got:",t.length),{status:"not_found"};console.log("🔍 Searching for users with pattern:",`%${t}`);let o,a;try{console.log("🔍 Trying Supabase client LIKE query...");const c=await this.supabase.from("users").select("id, phone, name").like("phone",`%${t}`).neq("id",((s=this.currentUser)==null?void 0:s.id)||"00000000-0000-0000-0000-000000000000").limit(5);o=c.data,a=c.error,console.log("🔍 Supabase LIKE query result:",{data:o,error:a})}catch(c){console.error("❌ Supabase client error:",c),console.log("🔄 Trying direct fetch fallback...");try{const n=await fetch(`${SUPABASE_CONFIG.SUPABASE_URL}/rest/v1/users?select=id,phone,name&phone=like.%25${t}&id=neq.${((r=this.currentUser)==null?void 0:r.id)||"00000000-0000-0000-0000-000000000000"}&limit=5`,{method:"GET",headers:{apikey:SUPABASE_CONFIG.SUPABASE_ANON_KEY,Authorization:`Bearer ${SUPABASE_CONFIG.SUPABASE_ANON_KEY}`,"Content-Type":"application/json",Prefer:"return=representation"}});console.log("🔍 Direct fetch status:",n.status),n.ok?(o=await n.json(),a=null,console.log("✅ Direct fetch successful, found users:",(o==null?void 0:o.length)||0)):(console.error("❌ Direct fetch failed:",n.status,n.statusText),n.status===406&&console.error("🚫 406 ERROR - Check Supabase project configuration!"),o=null,a={status:n.status,message:n.statusText})}catch(n){console.error("❌ Direct fetch error:",n),o=null,a=n}}return a&&a.code!=="PGRST116"&&(console.error("❌ Database error:",a),a.status===406&&(console.error("🚫 406 ERROR DETECTED!"),console.error("SOLUTION: Check Supabase project settings in dashboard"))),o&&o.length>0?(console.log("✅ Users found:",o.length),{status:"found",user:o[0],allResults:o}):(console.log("❌ No users found for pattern:",`%${t}`),{status:"not_found"})}catch(i){return console.error("Find user error:",i),{status:"error",message:i.message}}}async sendMessage(e,s,r="text",i=null,t=null){var o;if(await this.ensureInitialized(),console.log("📨 SupabaseClient: sendMessage called with:",{toUserId:e,content:s,messageType:r,replyToMessageId:i,fileData:t,currentUser:(o=this.currentUser)==null?void 0:o.id,isInitialized:this.isInitialized}),!this.currentUser)return console.error("❌ SupabaseClient: No authenticated user"),{status:"error",message:"No authenticated user"};try{const a={from_user_id:this.currentUser.id,to_user_id:e,content:s,message_type:r,reply_to_message_id:i,file_url:(t==null?void 0:t.url)||null,file_name:(t==null?void 0:t.name)||null,file_size:(t==null?void 0:t.size)||null};console.log("📨 SupabaseClient: Message data prepared:",a),console.log("📨 SupabaseClient: Executing database insert...");const{data:c,error:n}=await this.supabase.from("messages").insert(a).select().single();if(n)throw console.error("❌ SupabaseClient: Database insert failed:",n),console.error("❌ SupabaseClient: Error details:",{message:n.message,code:n.code,details:n.details,hint:n.hint}),n;return console.log("✅ SupabaseClient: Message sent successfully:",c),{status:"sent",message:c}}catch(a){return console.error("❌ SupabaseClient: Send message error:",a),console.error("❌ SupabaseClient: Error stack:",a.stack),{status:"error",message:a.message}}}async getMessages(e,s={}){if(await this.ensureInitialized(),!this.currentUser)return{status:"error",message:"No authenticated user"};try{const{limit:r=50,beforeTimestamp:i=null,afterTimestamp:t=null,includeReplies:o=!0}=s;let a=this.supabase.from("messages").select(`
                    *,
                    reply_to_message:messages!reply_to_message_id(
                        id,
                        content,
                        from_user_id,
                        users!from_user_id(name)
                    )
                `).eq("is_deleted",!1).or(`and(from_user_id.eq.${this.currentUser.id},to_user_id.eq.${e}),and(from_user_id.eq.${e},to_user_id.eq.${this.currentUser.id})`).order("created_at",{ascending:!1}).limit(r);i&&(a=a.lt("created_at",i)),t&&(a=a.gt("created_at",t));const{data:c,error:n}=await a;if(n)throw n;return{status:"success",messages:c.reverse().map(u=>{var p;return{id:u.id,from:u.from_user_id,msg:u.content,ts:u.created_at,seen:!0,replyTo:u.reply_to_message?{id:u.reply_to_message.id,text:u.reply_to_message.content,author:((p=u.reply_to_message.users)==null?void 0:p.name)||"User"}:null,messageType:u.message_type,fileUrl:u.file_url,fileName:u.file_name}}),hasMore:c.length===r}}catch(r){return console.error("Get messages error:",r),{status:"error",message:r.message}}}async markMessagesAsRead(e){if(await this.ensureInitialized(),!!this.currentUser)try{await this.supabase.from("user_chats").update({unread_count:0}).eq("owner_id",this.currentUser.id).eq("peer_id",e)}catch(s){console.error("Mark as read error:",s)}}async editMessage(e,s){if(await this.ensureInitialized(),!this.currentUser)return{status:"error",message:"No authenticated user"};try{const{data:r,error:i}=await this.supabase.from("messages").update({content:s,is_edited:!0,updated_at:new Date().toISOString()}).eq("id",e).eq("from_user_id",this.currentUser.id).select().single();if(i)throw i;return{status:"success",message:r}}catch(r){return console.error("Edit message error:",r),{status:"error",message:r.message}}}async deleteMessage(e){if(await this.ensureInitialized(),!this.currentUser)return{status:"error",message:"No authenticated user"};try{const{error:s}=await this.supabase.from("messages").update({is_deleted:!0}).eq("id",e).eq("from_user_id",this.currentUser.id);if(s)throw s;return{status:"success"}}catch(s){return console.error("Delete message error:",s),{status:"error",message:s.message}}}async addContact(e,s,r=null){if(await this.ensureInitialized(),!this.currentUser)return{status:"error",message:"No authenticated user"};try{const{data:i,error:t}=await this.supabase.from("contacts").insert({owner_id:this.currentUser.id,contact_name:e,contact_phone:s,contact_email:r}).select();if(t)throw t;return{status:"success",contacts:i}}catch(i){return console.error("Add contact error:",i),{status:"error",message:i.message}}}async getContacts(){if(await this.ensureInitialized(),!this.currentUser)return{status:"error",message:"No authenticated user"};try{const{data:e,error:s}=await this.supabase.from("contacts").select("*").eq("owner_id",this.currentUser.id).order("contact_name");if(s)throw s;return{status:"success",contacts:e}}catch(e){return console.error("Get contacts error:",e),{status:"error",message:e.message}}}async updateContact(e,s){if(await this.ensureInitialized(),!this.currentUser)return{status:"error",message:"No authenticated user"};try{const{data:r,error:i}=await this.supabase.from("contacts").update(s).eq("id",e).eq("owner_id",this.currentUser.id).select().single();if(i)throw i;return{status:"success",contact:r}}catch(r){return console.error("Update contact error:",r),{status:"error",message:r.message}}}async deleteContact(e){if(await this.ensureInitialized(),!this.currentUser)return{status:"error",message:"No authenticated user"};try{const{error:s}=await this.supabase.from("contacts").delete().eq("id",e).eq("owner_id",this.currentUser.id);if(s)throw s;return{status:"success"}}catch(s){return console.error("Delete contact error:",s),{status:"error",message:s.message}}}async getUserChats(){if(await this.ensureInitialized(),console.log("getUserChats called"),console.log("Current user state:",{currentUser:this.currentUser,isAuthenticated:this.isAuthenticated()}),!this.currentUser)return console.error("❌ No authenticated user - currentUser is null"),{status:"error",message:"No authenticated user"};console.log("✅ User is authenticated, proceeding with chat loading");try{const{data:e,error:s}=await this.supabase.from("user_chats").select(`
                    *,
                    peer:users!peer_id(
                        id,
                        name,
                        phone
                    )
                `).eq("owner_id",this.currentUser.id).eq("is_archived",!1).order("last_message_timestamp",{ascending:!1});if(s)throw s;return{status:"success",chats:e.map(i=>{var t,o,a;return{peerId:i.peer_id,peerPhone:((t=i.peer)==null?void 0:t.name)||((o=i.peer)==null?void 0:o.phone)||"Unknown",lastMessage:{msg:i.last_message_content,ts:i.last_message_timestamp},unreadCount:i.unread_count,isOnline:((a=i.peer)==null?void 0:a.is_online)||!1}})}}catch(e){return console.error("Get chats error:",e),{status:"error",message:e.message}}}async updateChatSettings(e,s){if(await this.ensureInitialized(),!this.currentUser)return{status:"error",message:"No authenticated user"};try{let{data:r}=await this.supabase.from("user_chats").select("id").eq("owner_id",this.currentUser.id).eq("peer_id",e).single();if(!r){const{data:o,error:a}=await this.supabase.from("user_chats").insert({owner_id:this.currentUser.id,peer_id:e}).select("id").single();if(a)throw a;r=o}const{data:i,error:t}=await this.supabase.from("chat_settings").upsert({owner_id:this.currentUser.id,chat_id:r.id,settings:s}).select().single();if(t)throw t;return{status:"success",settings:i}}catch(r){return console.error("Update chat settings error:",r),{status:"error",message:r.message}}}async archiveChat(e){if(await this.ensureInitialized(),!this.currentUser)return{status:"error",message:"No authenticated user"};try{const{error:s}=await this.supabase.from("user_chats").update({is_archived:!0}).eq("owner_id",this.currentUser.id).eq("peer_id",e);if(s)throw s;return{status:"success"}}catch(s){return console.error("Archive chat error:",s),{status:"error",message:s.message}}}async deleteChat(e){if(await this.ensureInitialized(),!this.currentUser)return{status:"error",message:"No authenticated user"};try{return await this.supabase.from("messages").delete().or(`from_user_id.eq.${this.currentUser.id},to_user_id.eq.${this.currentUser.id}`).eq("from_user_id",e),await this.supabase.from("user_chats").delete().eq("owner_id",this.currentUser.id).eq("peer_id",e),{status:"success"}}catch(s){return console.error("Delete chat error:",s),{status:"error",message:s.message}}}subscribeToMessages(e,s){if(!this.isInitialized||!this.currentUser)return null;const r=`messages:${this.currentUser.id}:${e}`;this.realtimeChannels.has(r)&&this.unsubscribeFromChannel(r),console.log("🔄 Setting up real-time subscription for chat:",{currentUserId:this.currentUser.id,peerId:e,channelName:r});const i=this.supabase.channel(r).on("postgres_changes",{event:"INSERT",schema:"public",table:"messages"},t=>{console.log("📨 Real-time message received:",t);const o=t.new.from_user_id===this.currentUser.id&&t.new.to_user_id===e,a=t.new.from_user_id===e&&t.new.to_user_id===this.currentUser.id;console.log("📨 Message relevance check:",{messageFrom:t.new.from_user_id,messageTo:t.new.to_user_id,currentUserId:this.currentUser.id,peerId:e,isFromCurrentUserToPeer:o,isFromPeerToCurrentUser:a,isRelevant:o||a}),o||a?(console.log("✅ Processing relevant message for this conversation"),s(t.new)):console.log("❌ Ignoring irrelevant message for this conversation")}).on("postgres_changes",{event:"UPDATE",schema:"public",table:"messages"},t=>{const o=t.new.from_user_id===this.currentUser.id&&t.new.to_user_id===e,a=t.new.from_user_id===e&&t.new.to_user_id===this.currentUser.id;(o||a)&&(console.log("📨 Real-time message update:",t),s(t.new))}).subscribe(t=>{console.log("📡 Real-time subscription status for",r,":",t),t==="SUBSCRIBED"?console.log("✅ Successfully subscribed to real-time messages"):t==="CHANNEL_ERROR"?console.error("❌ Real-time subscription error"):t==="TIMED_OUT"?console.error("❌ Real-time subscription timed out"):t==="CLOSED"&&console.log("📡 Real-time subscription closed")});return this.realtimeChannels.set(r,i),i}subscribeToUserStatus(e){if(!this.isInitialized||!this.currentUser)return null;const s="user_status";this.realtimeChannels.has(s)&&this.unsubscribeFromChannel(s);const r=this.supabase.channel(s).on("postgres_changes",{event:"UPDATE",schema:"public",table:"users"},i=>{e(i.new)}).subscribe();return this.realtimeChannels.set(s,r),r}async updateTypingStatus(e,s){if(await this.ensureInitialized(),!!this.currentUser)try{console.log(`Typing status: ${s?"started":"stopped"} for user ${e}`)}catch(r){console.error("Update typing status error:",r)}}unsubscribeFromChannel(e){const s=this.realtimeChannels.get(e);s&&(this.supabase.removeChannel(s),this.realtimeChannels.delete(e))}closeAllRealtimeChannels(){this.realtimeChannels.forEach((e,s)=>{this.supabase.removeChannel(e)}),this.realtimeChannels.clear()}async uploadProfilePicture(e){if(await this.ensureInitialized(),!this.currentUser)return{status:"error",message:"No authenticated user"};try{const s=e.name.split(".").pop(),r=`${this.currentUser.id}-${Date.now()}.${s}`,{data:i,error:t}=await this.supabase.storage.from("profile-pictures").upload(r,e);if(t)throw t;const{data:o}=this.supabase.storage.from("profile-pictures").getPublicUrl(r);return await this.updateProfile({profile_picture_url:o.publicUrl}),{status:"success",url:o.publicUrl}}catch(s){return console.error("Upload profile picture error:",s),{status:"error",message:s.message}}}async uploadChatFile(e,s){if(await this.ensureInitialized(),!this.currentUser)return{status:"error",message:"No authenticated user"};try{if(!e||e.size===0)throw new Error("Invalid file");const r=10*1024*1024;if(e.size>r)throw new Error("File size must be less than 10MB");if(!["image/jpeg","image/png","image/gif","image/webp","application/pdf","text/plain","application/msword","application/vnd.openxmlformats-officedocument.wordprocessingml.document","application/zip","application/x-rar-compressed"].includes(e.type)&&!e.type.startsWith("image/"))throw new Error("File type not allowed");const t=e.name.split(".").pop().toLowerCase(),o=Date.now(),a=Math.random().toString(36).substring(2,15),c=`${this.currentUser.id}-${s}-${o}-${a}.${t}`;console.log("📁 Uploading file:",c,"Size:",e.size,"Type:",e.type);const{data:n,error:h}=await this.supabase.storage.from("chat-files").upload(c,e,{cacheControl:"3600",upsert:!1});if(h)throw console.error("Storage upload error:",h),h;const{data:u}=this.supabase.storage.from("chat-files").getPublicUrl(c);return console.log("✅ File uploaded successfully:",u.publicUrl),{status:"success",url:u.publicUrl,name:e.name,size:e.size,type:e.type}}catch(r){return console.error("Upload chat file error:",r),{status:"error",message:r.message}}}async deleteFile(e,s){await this.ensureInitialized();try{const{error:r}=await this.supabase.storage.from(e).remove([s]);if(r)throw r;return{status:"success"}}catch(r){return console.error("Delete file error:",r),{status:"error",message:r.message}}}async sendOTP(e,s,r=null){await this.ensureInitialized();try{const{data:i,error:t}=await this.supabase.functions.invoke("send-otp",{body:{to:e,otp:s,name:r}});if(t)throw t;return{status:"success",message:"OTP email sent successfully"}}catch(i){return console.error("Send OTP error:",i),{status:"error",message:i.message}}}async sendEmail(e,s,r,i=null){await this.ensureInitialized();try{const t=`
                <!DOCTYPE html>
                <html>
                  <head>
                    <meta charset="utf-8">
                    <title>${s}</title>
                    <style>
                      body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
                      .container { max-width: 600px; margin: 0 auto; padding: 20px; }
                      .header { background: linear-gradient(135deg, #0084ff, #44c8f5); color: white; padding: 20px; text-align: center; border-radius: 10px 10px 0 0; }
                      .content { background: #f9f9f9; padding: 20px; border-radius: 0 0 10px 10px; }
                      .footer { text-align: center; margin-top: 20px; color: #666; font-size: 14px; }
                    </style>
                  </head>
                  <body>
                    <div class="container">
                      <div class="header">
                        <h1>📧 Digidad Message</h1>
                      </div>
                      <div class="content">
                        <h2>${s}</h2>
                        ${r}
                        <p><strong>Sent by Digidad Messaging App</strong></p>
                      </div>
                      <div class="footer">
                        <p>This email was sent from Digidad Messaging App</p>
                      </div>
                    </div>
                  </body>
                </html>
            `,{data:o,error:a}=await this.supabase.functions.invoke("send-otp",{body:{to:e,otp:"EMAIL",name:i,customSubject:s,customHtml:t}});if(a)throw a;return{status:"success",message:"Email sent successfully"}}catch(t){return console.error("Send email error:",t),{status:"error",message:t.message}}}async sendWelcomeEmail(e,s){await this.ensureInitialized();const r=`
            <!DOCTYPE html>
            <html>
              <head>
                <meta charset="utf-8">
                <title>Welcome to Digidad</title>
                <style>
                  body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
                  .container { max-width: 600px; margin: 0 auto; padding: 20px; }
                  .header { background: linear-gradient(135deg, #0084ff, #44c8f5); color: white; padding: 30px; text-align: center; border-radius: 10px 10px 0 0; }
                  .content { background: #f9f9f9; padding: 30px; border-radius: 0 0 10px 10px; }
                  .button { background: #0084ff; color: white; padding: 12px 24px; text-decoration: none; border-radius: 6px; display: inline-block; margin: 20px 0; }
                  .footer { text-align: center; margin-top: 20px; color: #666; font-size: 14px; }
                </style>
              </head>
              <body>
                <div class="container">
                  <div class="header">
                    <h1>🎉 Welcome to Digidad!</h1>
                    <p>Your secure messaging journey begins now</p>
                  </div>
                  <div class="content">
                    <h2>Hello ${s||"User"}!</h2>
                    <p>Welcome to <strong>Digidad Messaging App</strong>! We're excited to have you join our community.</p>
                    <p>With Digidad, you can:</p>
                    <ul>
                      <li>💬 Send secure messages to your contacts</li>
                      <li>🔒 Keep your conversations private and encrypted</li>
                      <li>📱 Access your messages from any device</li>
                      <li>👥 Manage your contacts easily</li>
                    </ul>
                    <a href="#" class="button">Start Messaging</a>
                    <p>If you have any questions, our support team is here to help!</p>
                  </div>
                  <div class="footer">
                    <p>This email was sent by Digidad Messaging App</p>
                    <p>You're receiving this because you recently created an account.</p>
                  </div>
                </div>
              </body>
            </html>
        `;return await this.sendEmail(e,"Welcome to Digidad!",r,s)}setCurrentUser(e){this.currentUser=e,console.log("✅ Supabase client currentUser set:",e==null?void 0:e.id)}getCurrentUser(){return this.currentUser}isAuthenticated(){return this.currentUser!==null}generateChatId(e,s){return[e,s].sort().join("_")}async testConnection(){await this.ensureInitialized();try{console.log("🧪 Testing database connection...");const{data:e,error:s}=await this.supabase.from("users").select("count").limit(1);if(s){console.error("❌ Supabase client test failed:",s),console.log("🔄 Trying direct fetch test...");const r=await fetch(`${SUPABASE_CONFIG.SUPABASE_URL}/rest/v1/users?select=count&limit=1`,{method:"GET",headers:{apikey:SUPABASE_CONFIG.SUPABASE_ANON_KEY,Authorization:`Bearer ${SUPABASE_CONFIG.SUPABASE_ANON_KEY}`,"Content-Type":"application/json"}});return r.ok?(console.log("✅ Direct fetch test successful"),{status:"success",method:"direct_fetch"}):(console.error("❌ Direct fetch test failed:",r.status,r.statusText),{status:"error",error:{status:r.status,message:r.statusText}})}else return console.log("✅ Supabase client test successful"),{status:"success",data:e,method:"supabase_client"}}catch(e){return console.error("❌ Connection test error:",e),{status:"error",error:e}}}}const g=d.getInstance();window.supabaseClient=g;window.testSupabaseConnection=()=>g.testConnection();window.testDirectFetch=async()=>{console.log("🧪 Testing direct fetch...");try{const l=await fetch(`${SUPABASE_CONFIG.SUPABASE_URL}/rest/v1/users?select=id,phone,name&phone=eq.1234567890`,{method:"GET",headers:{apikey:SUPABASE_CONFIG.SUPABASE_ANON_KEY,Authorization:`Bearer ${SUPABASE_CONFIG.SUPABASE_ANON_KEY}`,"Content-Type":"application/json"}});console.log("Response status:",l.status),console.log("Response headers:",Object.fromEntries(l.headers.entries()));const e=await l.text();return console.log("Response data:",e),{status:l.status,data:e}}catch(l){return console.error("Direct fetch error:",l),{error:l}}};window.testSearch=async l=>(console.log("🧪 Testing search with:",l),await g.findUserByPhone(l));window.showAllUsers=async()=>{console.log("🧪 Fetching all users...");try{const{data:l,error:e}=await g.supabase.from("users").select("id, phone, name").limit(10);return e?(console.error("❌ Error fetching users:",e),{error:e}):(console.log("✅ Users in database:",l),{users:l})}catch(l){return console.error("❌ Fetch error:",l),{error:l}}};window.testSearchUI=()=>{console.log("🧪 Testing search UI...");const l=document.querySelector(".search-input");l?(l.value="1234567890",l.dispatchEvent(new Event("input",{bubbles:!0})),console.log("✅ Test input dispatched")):console.error("❌ Search input not found")};
